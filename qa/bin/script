#!/bin/bash

dir=`dirname $0`
export PATH="$dir:$PATH"

. $dir/functions.sh

# dont pipe ParaGauss output onto tty by default:
tty="file"
while [[ "$1" == --* ]]; do
	if [ "$1" == "--tty" ]; then
		# ParaGauss output will go to tty:
		tty="tty"
	fi
	shift
done

if [ -z "$ttfs" ]; then
	ttfs=~ttfs/bin/ttfs_V3.0
fi

if [ -z "$versions" ]; then
	versions="V3.0.40b12-32 V3.1pre5-32"
fi

if [ -z "$vers_cmp" ]; then
	# use the first of them for comparision
	vers_cmp=${versions%% *}
	#ers_cmp="V3.0.40b12-32"
fi

if [ -z "$precisions" ]; then
	precisions="8 6 4"
fi

if [ -z "$PE_HOSTFILE" ]; then
   export PE_HOSTFILE=$dir/hostfile
fi

run_test(){
local inp
local out
local vers
local cmd
inp=$1
out=$2
vers=$3

cmd="
$ttfs $name \
 -newinput $inp \
 -inputdir . -outputdir $out \
 -vers $vers -mpi \
 -verbose -restartable \
 -keep_datadir"

if [ "$tty" = "tty" ]; then
	$cmd
else
	$cmd > tty
fi

if [ -f tty ]; then
  mv tty $out
fi

if [ -f hesse_cartesian.dat ]; then
  mv hesse_cartesian.dat $out
fi

if [ -f saved_scfstate.dat ]; then
  mv saved_scfstate.dat $out
fi
}

failed_cmp=""
failed_num=0
total_num=0

for name in $*; do
	name=`echo $name | sed s/^i\.//`
	inp=i.$name
	echo -n -e "Running $inp\t"
for vers in $versions; do
	out=o.$name,$vers
	smr=s.$name,$vers
	smr_cmp=s.$name,$vers_cmp

	echo -n " with $vers"
if [ -d $out ]; then
	echo -n " (exists)."
else
	echo -n " ..."
	run_test $inp $out $vers
	echo -n " done."
fi

	make_summary $out > $smr

#    \033[31m      switch on red
#    \033[32m      switch on green
rc_ok="\033[32mok\033[m\017"
rc_failed="\033[31mFAILED\033[m\017"

if [ "$vers" != "$vers_cmp" ]; then
	total_num=$(($total_num + 1))
	echo -n " Compare to $vers_cmp"
	ok=""
	ps=""
	for p in $precisions; do
		diff_prec $smr_cmp $smr $p #> diff$p
		retval=$?
		#echo -n " prec $p ret $retval"
		if [ $retval != 0 ]; then
			echo -e "\n$rc_failed test $name at precision $p!"
			ps="$ps@$p"
			ok="FAILED"
			failed_cmp="$failed_cmp $name@$p"
		fi
	done
	if [ -z "$ok" ]; then
		echo -e " -- $rc_ok"
	else
		echo -e "$rc_failed test $name$ps"
		failed_num=$(($failed_num + 1))
	fi
fi

done # foreach version
done # foreach $*

if [ -n "$failed_cmp" ]; then
	#echo -e "$rc_failed$failed_cmp!"
	for p in $precisions; do
		num=0
		lst=""
		for f in $failed_cmp; do
			if [[ "$f" == *@$p ]]; then
				num=$(($num + 1))
				lst="$lst $f"
			fi
		done
	echo -e "$rc_failed $num tests at precision $p:$lst"
	done
	echo -e "$rc_failed $failed_num of $total_num tests!"
fi

